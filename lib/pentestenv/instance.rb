# -*- coding: utf-8 -*-

class Pentestenv
  # Pentest-env Instance
  class Instance
    attr_reader :name

    def initialize(vagrant_config, instance_name, customization = {})
      @custom = customization
      @config = vagrant_config
      @name = instance_name
      @instance = instance_path(instance_name)
      fail ArgumentError,
           "Specified instance `#{@name}` is not available." unless @instance
    end

    def register
      require @instance
      instance @config
    end

    private

    def instance_path(instance)
      default_path = "#{ENV['PWD']}/instances/#{instance}"
      custom_path = "#{@custom['instances_path']}/#{instance}"
                    .gsub(/^~/, ENV['HOME'])

      if @custom.key?('instances_path') \
         && ! @custom['instances_path'].empty? && File.exist?("#{custom_path}.rb")
        return custom_path
      elsif File.exist?("#{default_path}.rb")
        return default_path
      end
      false
    end
  end
end
