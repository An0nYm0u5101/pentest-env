# This source file is part of pentest-env.
#
# pentest-env is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# pentest-env is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with pentest-env. If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.

require File.expand_path('target', File.dirname(__FILE__))

class Pentestenv
  class Customization
    def initialize(path, config)
      if ! Dir.exists?(path)
        raise ArgumentError, "Customizations path doesn\'t exists."
      end
      @config = config
      @path   = path
    end

    def targets
      if File.exists?(@path + "/targets")
        File.open(@path + "/targets").each do | t |
          target = Pentestenv::Target.new(@config, t.chomp)
          target.deploy
        end
      end
    end

    def packages
      if File.exists?(@path + "/packages")
        packages = File.open(@path + "/packages").readlines.join(" ").gsub("\n", "")
        @config.vm.provision :shell,
          :inline => "apt-get update; apt-get -y install " + packages
      end
    end

    def synced_folders
      if File.exists?(@path + "/synced_folders")
        folders = eval(File.open(@path + "/synced_folders").read)
        folders.each do | host, guest |
          @config.vm.synced_folder(host, guest)
        end
      end
    end

    def scripts
      if Dir.exists?(@path + "/scripts/")
        Dir.glob(@path + "/scripts/*") do | script |
          if ["file", "link"].include?(File.ftype(script))
            @config.vm.provision :shell,
            :path => script
          end
        end
      end
    end
  end
end
