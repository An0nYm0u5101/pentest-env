{
  "name": "Pentest-env",
  "tagline": "Pentest environment (kali linux) deployer using vagrant and chef.",
  "body": "# Pentest Environment Deployer\r\n\r\nThis repo provides an easy way to deploy a clean pentesting environment with Kali linux using vagrant and virtualbox.\r\n\r\n## Requirements\r\nI assume you are familiar with virtualbox and vagrant.\r\n- https://www.virtualbox.org/\r\n- http://www.vagrantup.com/\r\n\r\nLatest `pentest-env` release is tested with:\r\n- Virtualbox (5.0.14)\r\n- Vagrant (1.8.1)\r\n\r\n## Current box\r\n### Kali 2016.1\r\n- http://box.hackbbs.org/kali-2016.1.1-netfix.box\r\nSHA256: c652a76feca465f872c49442d780d332ec10aba3047950d8a3de95183ec8af6c\r\n\r\nSee the [documentation](https://github.com/Sliim/pentest-env/tree/master/docs/About-boxes.md) page about boxes for more details.\r\n\r\n## Getting started\r\nTo get started with `pentest-env`, clone this repository and run `vagrant up` inside the directory.\r\nThis will download and run the Kali instance.\r\n\r\nYou can customize, add targets, create new targets etc.. inside `pentest-env`.\r\nSome examples are available in the `examples/` directory, to use one simply set the `PENTESTRC` environment variable:\r\n```\r\n> PENTESTRC=examples/ctf.pentestrc vagrant status\r\nCurrent machine states:\r\n\r\nkali                      running (virtualbox)\r\nmetasploitable            not created (virtualbox)\r\nprimer                    not created (virtualbox)\r\n\r\nThis environment represents multiple VMs. The VMs are all listed\r\nabove with their current state. For more information about a specific\r\nVM, run `vagrant status NAME`.\r\n```\r\n\r\nFor more details, visit the [documentation](https://github.com/Sliim/pentest-env/tree/master/docs) pages:\r\n\r\n1. [Installation](https://github.com/Sliim/pentest-env/tree/master/docs/Installation.md)\r\n2. [Usage](https://github.com/Sliim/pentest-env/tree/master/docs/Usage.md)\r\n3. [Docker](https://github.com/Sliim/pentest-env/tree/master/docs/Docker.md)\r\n4. [Openstack](https://github.com/Sliim/pentest-env/tree/master/docs/Openstack.md)\r\n5. [Customizations](https://github.com/Sliim/pentest-env/tree/master/docs/Customizations.md)\r\n6. [Instances](https://github.com/Sliim/pentest-env/tree/master/docs/Instances.md)\r\n7. [Targets](https://github.com/Sliim/pentest-env/tree/master/docs/Targets.md)\r\n8. [Write custom instances and targets](https://github.com/Sliim/pentest-env/tree/master/docs/Custom-instances.md)\r\n9. [Debugging](https://github.com/Sliim/pentest-env/tree/master/docs/Debugging.md)\r\n10. [About boxes](https://github.com/Sliim/pentest-env/tree/master/docs/About-boxes.md)\r\n11. [Known issues](https://github.com/Sliim/pentest-env/tree/master/docs/Known-issues.md)\r\n\r\n## About Security\r\n#### verify checksums\r\nIt's recommended to check downloaded box files with provided checksums (SHA256): http://box.hackbbs.org/checksums.txt\r\n#### sshd is running\r\nProvided boxes run the `sshd` service.\r\nSo if you plan to run the Kali linux with a Bridged interface, default setup can be dangerous!\r\n\r\n- `root` password of kali is `toor`.\r\n- SSH private key is not private! Anyone can use this [key](https://github.com/Sliim/pentest-env/blob/master/ssh-keys/pentest-env) to connect to your instance.\r\n- The Kali linux 1.0 box added a `vagrant` user with password `tnargav` and is in sudoers with no password required.\r\n\r\n## License\r\n   See COPYING file\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}