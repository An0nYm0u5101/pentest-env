* Pentest Environment Deployment

This tool provide an easy way to deploy a clean pentesting environment with Kali linux using vagrant and virtualbox.

** Requirements
I assume you are familiar with virtualbox and vagrant.
- https://www.virtualbox.org/
- http://www.vagrantup.com/

Tested with:
- Virtualbox (4.3.20)
- Vagrant (1.7.1)

** About boxes
*** Boxes URL
- Kali linux 1.0: http://ftp.sliim-projects.eu/boxes/kali-linux-1.0-amd64.box
  + VirtualBox 4.2.10
  + Vagrant 1.0.7
- Kali linux 1.0.4: http://ftp.sliim-projects.eu/boxes/kali-linux-1.0.4-amd64.box
  + VirtualBox 4.2.16
  + Vagrant 1.2.7
*** Changes details
Provided boxes are fresh install of Kali linux with some changes:

**** Kali linux 1.0
 - Installation of linux kernel headers for vbox guest additions.
 - Installation of virtualbox guest additions.
 - Installation of ~chef~ package for provisioning.
 - ~vagrant~ user was created for provisionning (Password: ~tnargav~).
 - ~admin~ group don't require password for sudo.
 - ~vagrant~ user is in ~admin~ group.
 - Authorized keys for ~vagrant~ user are stored in ~ssh-keys/~ directory (no passphrase).
 - Enabling rpcbind, nfs-common and ssh services at boot.

**** Kali linux 1.0.4
Fresh install from http://cdimage.kali.org/kali-latest/amd64/kali-linux-1.0.4-amd64-mini.iso

 - Installation of linux kernel headers for vbox guest additions.
 - Installation of virtualbox guest additions.
 - Installation of ~chef~ package for provisioning.
 - Authorized keys for ~root~ user are stored in ~ssh-keys/~ directory (no passphrase).
 - Enabling rpcbind, nfs-common and ssh services at boot.
 - Modified /etc/issue for vagrant os detection.
 - MAC address for private network was added in /etc/NetworkManager/NetworkManager.conf to disable auto connect.

*Please don't forget to read security warning below !*

** Installation
You will need rake and berkshelf for vm provisionning, you can install it with rubygems:
#+BEGIN_SRC shell
gem install rake berkshelf
#+END_SRC

Clone pentest-env repository:
#+BEGIN_SRC shell
git clone https://github.com/Sliim/pentest-env.git
#+END_SRC

Install cookbooks dependencies:
#+BEGIN_SRC shell
rake
#+END_SRC

** Usage
*** Running Kali linux
#+BEGIN_SRC shell
vagrant up kali
#+END_SRC
*** Kali linux customizations
You can perform many customizations when deploying a kali linux instance.
Customizations are located in ~custom/~ directory.

Below available customizations:
- ~custom/packages~
Allow user to set a package list to install in Kali linux.
Puts in this file some packages you want to install after kali linux deployed.
These packages are installed with debian package manager (apt).

- ~custom/synced_folders~
Allow user to set a list of directories to sync in Kali linux.
Puts in this file your host directories you want to sync with kali linux.
File format is simply a ruby Hash, for example, to sync ~$HOME/.pentest-env~ into ~/root/data~, custom file look like:
#+BEGIN_SRC ruby
{
  ENV["HOME"] + "/.pentest-env" => "/root/data"
}
#+END_SRC

- ~custom/scripts/~
Allow user to execute some scripts after Kali linux deployed.
Each files into ~custom/scripts/~ will be executed on the guest with vagrant shell provisionning.

*** Targets deployment
You can easily deploy targets with your kali instance.

To setup targets, edit ~custom/targets~ (create if not exists) and set one target per line you want to deploy.

#+BEGIN_SRC shell
$ cat custom/targets
gruyere
vicnum
#+END_SRC

Here two virtual machines will be deployed with a gruyere and a vicnum instance ready to use.

To deploy Kali linux and targets:
#+BEGIN_SRC shell
vagrant up
#+END_SRC

Available targets are:
- ~dvwa~ - DVWA (Damn Vulnerable Web Application) - http://www.dvwa.co.uk/
- ~vicnum~ - OWASP Vicnum - https://www.owasp.org/index.php/Category:OWASP_Vicnum_Project
- ~gruyere~ - Google Gruyere - http://google-gruyere.appspot.com/
- ~bricks~ - OWASP Bricks - https://www.owasp.org/index.php/OWASP_Bricks
- ~webgoat~ - OWASP WebGoat - https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project

** Known issues
*** Hostonly on kali linux 1.0 fail
Hostonly connection will be reset at first vm creation.
To resolve this, disconnect connection in gui mode and run in your vagrant directory:
#+BEGIN_SRC shell
vagrant reload kali
#+END_SRC
** Security warning
*** Kali linux 1.0
Virtual machine boot with sshd service running and may cause some security issues:
  - Bridged network is enabled by default.
  - Default root password of this box is insecure (toor).
  - Vagrant user is insecure
    + Private key stored in ~ssh-keys/~.
    + Password known (~tnargav~).
    + User in sudoers with no password required.

*** Kali linux 1.0.4
Virtual machine boot with sshd service running and may cause some security issues:
  - Bridged network is enabled by default.
  - Default root password of this box is insecure (toor).

** License
   See COPYING file
