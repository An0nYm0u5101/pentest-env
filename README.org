* Pentest Environment Deployment

This tool provide an easy way to deploy a clean pentesting environment with Kali linux using vagrant and virtualbox.

** Requirements
I assume you are familiar with virtualbox and vagrant.
- https://www.virtualbox.org/
- http://www.vagrantup.com/

Tested with:
- Virtualbox (4.3.20)
- Vagrant (1.7.1)

** About boxes
*** Boxes URL
- Kali linux 1.0: http://ftp.sliim-projects.eu/boxes/kali-linux-1.0-amd64.box
  + VirtualBox 4.2.10
  + Vagrant 1.0.7
- Kali linux 1.0.4: http://ftp.sliim-projects.eu/boxes/kali-linux-1.0.4-amd64.box
  + VirtualBox 4.2.16
  + Vagrant 1.2.7
*** Changes details
Provided boxes are fresh install of Kali linux with some changes:

**** Kali linux 1.0
 - Installation of linux kernel headers for vbox guest additions.
 - Installation of virtualbox guest additions.
 - Installation of ~chef~ package for provisioning.
 - ~vagrant~ user was created for provisionning (Password: ~tnargav~).
 - ~admin~ group don't require password for sudo.
 - ~vagrant~ user is in ~admin~ group.
 - Authorized keys for ~vagrant~ user are stored in ~ssh-keys/~ directory (no passphrase).
 - Enabling rpcbind, nfs-common and ssh services at boot.

**** Kali linux 1.0.4
Fresh install from http://cdimage.kali.org/kali-latest/amd64/kali-linux-1.0.4-amd64-mini.iso

 - Installation of linux kernel headers for vbox guest additions.
 - Installation of virtualbox guest additions.
 - Installation of ~chef~ package for provisioning.
 - Authorized keys for ~root~ user are stored in ~ssh-keys/~ directory (no passphrase).
 - Enabling rpcbind, nfs-common and ssh services at boot.
 - Modified /etc/issue for vagrant os detection.
 - MAC address for private network was added in /etc/NetworkManager/NetworkManager.conf to disable auto connect.

*Please don't forget to read security warning below !*

** Installation
You will need rake and berkshelf for vm provisionning, you can install it with rubygems:
#+BEGIN_SRC shell
gem install rake berkshelf
#+END_SRC

Clone pentest-env repository:
#+BEGIN_SRC shell
git clone https://github.com/Sliim/pentest-env.git
#+END_SRC

Install cookbooks dependencies:
#+BEGIN_SRC shell
rake
#+END_SRC

** Usage
*** Running Kali linux
Pentest-env works with Vagrant, so all you need to know is to use basic vagrant features :)
To run kali instance:
#+BEGIN_SRC shell
vagrant up kali
#+END_SRC

*** Pentest-env customizations
Since Pentest-env 0.5.0, customizations are stored in ~\~/.pentestrc~ file as YAML format.
An example of configuration file is available at the root of this repository named ~pentestrc.example~

You can copy and edit it for your needs:
#+BEGIN_SRC shell
cp pentestrc.example ~/.pentestrc
#+END_SRC

Here is a minimal configuration:
#+BEGIN_SRC yaml
scripts_path: ~/.pentest.d/scripts
targets_path: ~/.pentest.d/targets
targets: []
#+END_SRC

This setup set your ~scripts~ and ~targets~ directories used by pentest-env.
It also set an empty target list.. if you just want to run a Kali instance..

**** Kali linux customizations
You can perform many customizations on kali linux instance.
Just add ~kali~ key in your ~\~/.pentestrc~, below the availables customizations:
- ~packages~ - An array of apt packages to install
- ~commands~ - List of command to run as inline shell script
- ~scripts~ - List of scripts to execute. They must be located in ~scripts_path~ directory
- ~synced_folders~ - Hash for forlders to sync with the instance

Example:
#+BEGIN_SRC yaml
kali:
  packages: [git-core]
  commands:
  - curl https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chef_12.0.3-1_amd64.deb -o chef.deb && sudo dpkg -i chef.deb
  scripts: [openvas.sh]
  synced_folders: {data: /pentest}
#+END_SRC

**** Targets customization
You can easily deploy targets with your kali instance.
Pentest-env comes with some targets ready to use:
- ~dvwa~ - DVWA (Damn Vulnerable Web Application) - http://www.dvwa.co.uk/
- ~vicnum~ - OWASP Vicnum - https://www.owasp.org/index.php/Category:OWASP_Vicnum_Project
- ~gruyere~ - Google Gruyere - http://google-gruyere.appspot.com/
- ~bricks~ - OWASP Bricks - https://www.owasp.org/index.php/OWASP_Bricks
- ~webgoat~ - OWASP WebGoat - https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project

To setup targets to deploy, edit your ~\~/.pentestrc~ and set the ~targets~ list:

#+BEGIN_SRC yaml
targets: [dvwa vicnum]
#+END_SRC

You can add your own targets in your ~targets_path~ directory and use them in your ~targets~ list.

Targets instance can be customized same as the kali instance, use the target's name as a key in your configuration file to customize the targets:
#+BEGIN_SRC yaml
dvwa:
  packages: [git-core]
vicnum:
  packages: [git-core]
#+END_SRC

** Known issues
*** Hostonly on kali linux 1.0 fail
Hostonly connection will be reset at first vm creation.
To resolve this, disconnect connection in gui mode and run in your vagrant directory:
#+BEGIN_SRC shell
vagrant reload kali
#+END_SRC
** Security warning
*** Kali linux 1.0
Virtual machine boot with sshd service running and may cause some security issues:
  - Bridged network is enabled by default.
  - Default root password of this box is insecure (toor).
  - Vagrant user is insecure
    + Private key stored in ~ssh-keys/~.
    + Password known (~tnargav~).
    + User in sudoers with no password required.

*** Kali linux 1.0.4
Virtual machine boot with sshd service running and may cause some security issues:
  - Bridged network is enabled by default.
  - Default root password of this box is insecure (toor).

** License
   See COPYING file
